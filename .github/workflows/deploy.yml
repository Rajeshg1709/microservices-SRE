name: deploy microservices 

on:
  workflow_dispatch:

env:
  EKS_DIR: Terraform/EKS
  MONITORING_DIR: Terraform/Monitoring 
    
jobs:
  terraform_eks:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4.1.2

      - name: configure AWS Cli
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: terraform init
        working-directory: ${{ env.EKS_DIR }}
        run: terraform init

      - name: terraform plan
        working-directory: ${{ env.EKS_DIR }}
        run: terraform plan

      - name: terraform apply
        working-directory: ${{ env.EKS_DIR }}
        run: terraform apply -auto-approve

  microservices:
    runs-on: ubuntu-latest
    needs: terraform_eks
    steps:
      - name: checkout code
        uses: actions/checkout@v4.1.2

      - name: configure AWS Cli
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: connect to EKS cluster
        run: 
          aws eks update-kubeconfig --region us-east-2 --name microservices

      - name: Deploy example Microservice
        run: kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatform/microservices-demo/main/release/kubernetes-manifests.yaml
        
      - name: check deployment status
        run: 
          sleep 60
          
      - name: get deployment status
        run:
          kubectl get all -o wide -A


  terraform_monitoring:
    needs: microservices
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4.1.2

      - name: configure AWS Cli
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Install Trivy
        run:
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install trivy

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: terraform init
        working-directory: ${{ env.MONITORING_DIR }}
        run: terraform init

      - name: terraform plan
        working-directory: ${{ env.MONITORING_DIR }}
        run: terraform plan

      - name: terraform apply
        working-directory: ${{ env.MONITORING_DIR }}
        run: terraform apply -auto-approve

      - name: connect to EKS Cluster
        run:
          aws eks update-kubeconfig --region us-ease-2 --name microservices

      - name: check Vulnerabilities
        run:
          trivy k8s --report=all all --severity=CRITICAL


 